name: Deploy Node.js app to AWS

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main
  workflow_dispatch:
    inputs:
      deploy_to:
        description: 'Choose the environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
          - custom-deploy-dev
          - custom-deploy-qa
          - custom-deploy-stg
          - custom-deploy-prod

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'
      - name: Node version
        run: node --version
      - name: Docker version
        run: docker --version
      - name: Build Docker image
        run: docker build -t your-app:${{ github.sha }} .
      - name: Login to Amazon ECR
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          aws --version
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin <your-account-id>.dkr.ecr.$AWS_REGION.amazonaws.com
      - name: Tag Docker image
        run: docker tag your-app:${{ github.sha }} <your-account-id>.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/your-app:${{ github.sha }}
      - name: Push Docker image to ECR
        run: docker push <your-account-id>.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/your-app:${{ github.sha }}
      - name: Install dependencies
        run: npm install
      - name: Build the project
        run: npm run build

  deploy_dev:
    runs-on: ubuntu-latest
    needs: setup
    if: ${{ github.event.inputs.deploy_to == 'custom-deploy-dev' }}
    steps:
      - name: Deploy to AWS Dev
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          echo "Deploying to AWS Dev environment"
          # Add your actual deployment commands for Dev environment here
          aws s3 cp ./dist s3://your-bucket-name --recursive
          # Or for Elastic Beanstalk:
          # eb deploy --region $AWS_REGION --profile dev

  deploy_qa:
    runs-on: ubuntu-latest
    needs: setup
    if: ${{ github.event.inputs.deploy_to == 'custom-deploy-qa' }}
    steps:
      - name: Deploy to AWS QA
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          echo "Deploying to AWS QA environment"
          # Add your actual deployment commands for QA environment here
          aws s3 cp ./dist s3://your-bucket-name --recursive
          # Or for Elastic Beanstalk:
          # eb deploy --region $AWS_REGION --profile qa

  deploy_stg:
    runs-on: ubuntu-latest
    needs: setup
    if: ${{ github.event.inputs.deploy_to == 'custom-deploy-stg' }}
    steps:
      - name: Deploy to AWS Staging
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          echo "Deploying to AWS Staging environment"
          # Add your actual deployment commands for Staging environment here
          aws s3 cp ./dist s3://your-bucket-name --recursive
          # Or for Elastic Beanstalk:
          # eb deploy --region $AWS_REGION --profile stg

  deploy_prod:
    runs-on: ubuntu-latest
    needs: setup
    if: ${{ github.event.inputs.deploy_to == 'custom-deploy-prod' }}
    steps:
      - name: Deploy to AWS Production
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          echo "Deploying to AWS Production environment"
          # Add your actual deployment commands for Production environment here
          aws s3 cp ./dist s3://your-bucket-name --recursive
          # Or for Elastic Beanstalk:
          # eb deploy --region $AWS_REGION --profile prod
